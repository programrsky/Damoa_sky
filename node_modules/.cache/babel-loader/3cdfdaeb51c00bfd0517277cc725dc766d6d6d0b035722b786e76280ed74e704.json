{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fix\\\\Documents\\\\GitHub\\\\Damoa_sky\\\\src\\\\component\\\\Board.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from '../css/Board.module.css';\nimport Reviewstyles from '../css/Review.module.css';\nimport { ReactComponent as AddIcon } from '../svg/AddIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  let counter = 1;\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Define the base URL\n        let baseURL = '';\n        if (process.env.NODE_ENV === 'development') {\n          // If in development environment, use local IP\n          baseURL = 'http://121.139.20.242:5100';\n        }\n        const response = await axios.post(`${baseURL}/api/notice_selectlist`, {\n          notice_auth: 1\n        });\n        if (response.data.valid) {\n          setData(response.data.data);\n        } else {\n          setErrorMessage('리스트를 불러오는데 실패하였습니다.');\n        }\n      } catch (error) {\n        setErrorMessage('데이터베이스 연결이 실패하였습니다.');\n      }\n    };\n    fetchData();\n  }, []);\n  const handleWriteClick = event => {\n    const userId = localStorage.getItem('user_id');\n    if (!userId) {\n      event.preventDefault();\n      alert('로그인 후에 글을 작성하실 수 있습니다.');\n    } else {\n      navigate('writing');\n    }\n  };\n  const fetchNoticeData = async (noticeId, setPost, setErrorMessage) => {\n    try {\n      let baseURL = '';\n      if (process.env.NODE_ENV === 'development') {\n        baseURL = 'http://121.139.20.242:5100';\n      }\n      const response = await axios.get(`${baseURL}/api/notice_update`, {\n        params: {\n          notice_id: noticeId\n        }\n      });\n      if (response.data.valid) {\n        if (response.data.data[0].notice_auth === 1) {\n          setPost(response.data.data[0]);\n        } else {\n          setErrorMessage('커뮤니티 글이 아닙니다.');\n        }\n      } else {\n        setErrorMessage('Invalid notice ID.');\n      }\n    } catch (error) {\n      setErrorMessage('Failed to connect to the database.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.boardContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.headerContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleWriteClick,\n        style: {\n          cursor: 'pointer'\n        },\n        className: Reviewstyles.button,\n        children: [/*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Reviewstyles.buttonText,\n          children: \"\\uAE00 \\uC4F0\\uB7EC \\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.boardHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.headerItem,\n        children: \"\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.headerItem,\n        children: \"\\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.headerItem,\n        children: \"\\uAE00\\uC4F4\\uC774\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.headerItem,\n        children: \"\\uC791\\uC131\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.headerItem,\n        children: \"\\uC870\\uD68C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.boardRow,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rowItem,\n        children: counter++\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/community/post?notice_id=${item.notice_id}`,\n        onClick: fetchNoticeData,\n        className: styles.rowItem,\n        children: item.notice_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rowItem,\n        children: item.user_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rowItem,\n        children: (() => {\n          const date = new Date(item.notice_date);\n          date.setHours(date.getHours() - 9);\n          const formattedDate = date.toLocaleDateString('ko-KR', {\n            hour: 'numeric',\n            minute: 'numeric'\n          });\n          return formattedDate;\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rowItem,\n        children: item.notice_views\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorMessage,\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"iKSlwSU6k6jE0Xjse/MeSw2+NBM=\", false, function () {\n  return [useNavigate];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","axios","styles","Reviewstyles","ReactComponent","AddIcon","jsxDEV","_jsxDEV","Board","_s","data","setData","errorMessage","setErrorMessage","counter","navigate","fetchData","baseURL","process","env","NODE_ENV","response","post","notice_auth","valid","error","handleWriteClick","event","userId","localStorage","getItem","preventDefault","alert","fetchNoticeData","noticeId","setPost","get","params","notice_id","className","boardContainer","children","headerContainer","onClick","style","cursor","button","fileName","_jsxFileName","lineNumber","columnNumber","buttonText","boardHeader","headerItem","map","item","boardRow","rowItem","to","notice_name","user_name","date","Date","notice_date","setHours","getHours","formattedDate","toLocaleDateString","hour","minute","notice_views","id","_c","$RefreshReg$"],"sources":["C:/Users/fix/Documents/GitHub/Damoa_sky/src/component/Board.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styles from '../css/Board.module.css';\r\nimport Reviewstyles from '../css/Review.module.css';\r\nimport { ReactComponent as AddIcon } from '../svg/AddIcon.svg';\r\n\r\nconst Board = () => {\r\n    const [data, setData] = useState([]);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    let counter = 1;\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                // Define the base URL\r\n                let baseURL = '';\r\n                if (process.env.NODE_ENV === 'development') {\r\n                    // If in development environment, use local IP\r\n                    baseURL = 'http://121.139.20.242:5100';\r\n                }\r\n                const response = await axios.post(`${baseURL}/api/notice_selectlist`, {\r\n                    notice_auth: 1,\r\n                });\r\n                if (response.data.valid) {\r\n                    setData(response.data.data);\r\n                } else {\r\n                    setErrorMessage('리스트를 불러오는데 실패하였습니다.');\r\n                }\r\n            } catch (error) {\r\n                setErrorMessage('데이터베이스 연결이 실패하였습니다.');\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleWriteClick = (event) => {\r\n        const userId = localStorage.getItem('user_id');\r\n        if (!userId) {\r\n            event.preventDefault();\r\n            alert('로그인 후에 글을 작성하실 수 있습니다.');\r\n        } else {\r\n            navigate('writing');\r\n        }\r\n    };\r\n    const fetchNoticeData = async (noticeId, setPost, setErrorMessage) => {\r\n        try {\r\n            let baseURL = '';\r\n            if (process.env.NODE_ENV === 'development') {\r\n                baseURL = 'http://121.139.20.242:5100';\r\n            }\r\n            const response = await axios.get(`${baseURL}/api/notice_update`, {\r\n                params: { notice_id: noticeId },\r\n            });\r\n            if (response.data.valid) {\r\n                if (response.data.data[0].notice_auth === 1) {\r\n                    setPost(response.data.data[0]);\r\n                } else {\r\n                    setErrorMessage('커뮤니티 글이 아닙니다.');\r\n                }\r\n            } else {\r\n                setErrorMessage('Invalid notice ID.');\r\n            }\r\n        } catch (error) {\r\n            setErrorMessage('Failed to connect to the database.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.boardContainer}>\r\n            <div className={styles.headerContainer}>\r\n                <div onClick={handleWriteClick} style={{ cursor: 'pointer' }} className={Reviewstyles.button} >\r\n                    <AddIcon />\r\n                    <p className={Reviewstyles.buttonText}>글 쓰러 가기</p>\r\n                </div>\r\n            </div>\r\n            <div className={styles.boardHeader}>\r\n                <div className={styles.headerItem}>번호</div>\r\n                <div className={styles.headerItem}>제목</div>\r\n                <div className={styles.headerItem}>글쓴이</div>\r\n                <div className={styles.headerItem}>작성일</div>\r\n                <div className={styles.headerItem}>조회</div>\r\n            </div>\r\n            {data.map((item) => (\r\n                <div key={item.id} className={styles.boardRow}>\r\n                    <div className={styles.rowItem}>{counter++}</div>\r\n                    <Link to={`/community/post?notice_id=${item.notice_id}`} onClick={fetchNoticeData} className={styles.rowItem}>\r\n                        {item.notice_name}\r\n                    </Link>\r\n                    <div className={styles.rowItem}>{item.user_name}</div>\r\n                    <div className={styles.rowItem}>\r\n                        {(() => {\r\n                            const date = new Date(item.notice_date);\r\n                            date.setHours(date.getHours() - 9);\r\n                            const formattedDate = date.toLocaleDateString('ko-KR', {\r\n                                hour: 'numeric',\r\n                                minute: 'numeric',\r\n                            });\r\n\r\n                            return formattedDate;\r\n                        })()}\r\n                    </div>\r\n                    <div className={styles.rowItem}>{item.notice_views}</div>\r\n                </div>\r\n            ))}\r\n            {errorMessage && <div className={styles.errorMessage}>{errorMessage}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}