{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useLocation}from'react-router-dom';import axios from'axios';import styles from'../css/PostDetail.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const PostDetail=()=>{const location=useLocation();const searchParams=new URLSearchParams(location.search);const noticeId=searchParams.get('notice_id');const[post,setPost]=useState({});const[comments,setComments]=useState([]);const[newComment,setNewComment]=useState('');const[replyTo,setReplyTo]=useState(null);const[newReply,setNewReply]=useState('');const[errorMessage,setErrorMessage]=useState('');useEffect(()=>{const fetchData=async()=>{try{let baseURL='';if(process.env.NODE_ENV==='development'){baseURL='http://121.139.20.242:5100';}const response=await axios.get(\"\".concat(baseURL,\"/api/notice_select\"),{params:{notice_id:noticeId}});if(response.data.valid){if(response.data.data[0].notice_auth===1){setPost(response.data.data[0]);}else{setErrorMessage('커뮤니티 글이 아닙니다.');}}else{setErrorMessage('Invalid notice ID.');}}catch(error){setErrorMessage('Failed to connect to the database.');}};fetchData();},[noticeId]);const handleAddComment=()=>{if(newComment.trim()!==''){const newComments=[...comments,{text:newComment,id:Date.now(),replies:[],parentId:null}];setComments(newComments);setNewComment('');}};const handleAddReply=parentId=>{if(newReply.trim()!==''){const newComments=[...comments,{text:newReply,id:Date.now(),replies:[],parentId:parentId}];setComments(newComments);setNewReply('');setReplyTo(null);}};const handleReply=commentId=>{setReplyTo(commentId);};return/*#__PURE__*/_jsx(\"div\",{className:styles.postDetailContainer,children:errorMessage?/*#__PURE__*/_jsx(\"p\",{className:styles.errorMessage,children:errorMessage}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:styles.postTitle,children:post.notice_name}),/*#__PURE__*/_jsxs(\"p\",{className:styles.postMeta,children:[\"\\uC870\\uD68C\\uC218: \",post.notice_views,\" | \\uC791\\uC131\\uC77C: \",new Date(post.notice_date).toLocaleDateString()]}),/*#__PURE__*/_jsx(\"div\",{className:styles.postContent,children:post.notice_detail}),/*#__PURE__*/_jsxs(\"div\",{className:styles.commentSection,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uB313\\uAE00\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.commentInput,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newComment,onChange:e=>setNewComment(e.target.value),placeholder:\"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.button,onClick:handleAddComment,children:\"\\uB313\\uAE00 \\uB2EC\\uAE30\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.comments,children:comments.filter(comment=>comment.parentId===null).map(comment=>/*#__PURE__*/_jsxs(\"div\",{className:styles.comment,children:[/*#__PURE__*/_jsx(\"p\",{children:comment.text}),/*#__PURE__*/_jsx(\"button\",{className:styles.replyButton,onClick:()=>handleReply(comment.id),children:\"\\uB2F5\\uAE00 \\uC4F0\\uAE30\"}),replyTo===comment.id&&/*#__PURE__*/_jsxs(\"div\",{className:styles.replyInput,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newReply,onChange:e=>setNewReply(e.target.value),placeholder:\"\\uB2F5\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.button,onClick:()=>handleAddReply(comment.id),children:\"\\uB2F5\\uAE00 \\uB2EC\\uAE30\"})]}),comments.filter(reply=>reply.parentId===comment.id).map(reply=>/*#__PURE__*/_jsx(\"div\",{className:styles.reply,children:/*#__PURE__*/_jsx(\"p\",{children:reply.text})},reply.id))]},comment.id))})]})]})});};export default PostDetail;","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","styles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PostDetail","location","searchParams","URLSearchParams","search","noticeId","get","post","setPost","comments","setComments","newComment","setNewComment","replyTo","setReplyTo","newReply","setNewReply","errorMessage","setErrorMessage","fetchData","baseURL","process","env","NODE_ENV","response","concat","params","notice_id","data","valid","notice_auth","error","handleAddComment","trim","newComments","text","id","Date","now","replies","parentId","handleAddReply","handleReply","commentId","className","postDetailContainer","children","postTitle","notice_name","postMeta","notice_views","notice_date","toLocaleDateString","postContent","notice_detail","commentSection","commentInput","type","value","onChange","e","target","placeholder","button","onClick","filter","comment","map","replyButton","replyInput","reply"],"sources":["/Users/programsky/Documents/GitHub/Damoa_sky/src/component/PostDetail.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from '../css/PostDetail.module.css';\n\nconst PostDetail = () => {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    const noticeId = searchParams.get('notice_id');\n    \n    const [post, setPost] = useState({});\n    const [comments, setComments] = useState([]);\n    const [newComment, setNewComment] = useState('');\n    const [replyTo, setReplyTo] = useState(null);\n    const [newReply, setNewReply] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                let baseURL = '';\n                if (process.env.NODE_ENV === 'development') {\n                    baseURL = 'http://121.139.20.242:5100';\n                }\n                const response = await axios.get(`${baseURL}/api/notice_select`, {\n                    params: { notice_id: noticeId },\n                });\n                if (response.data.valid) {\n                    if (response.data.data[0].notice_auth === 1) {\n                        setPost(response.data.data[0]);\n                    } else {\n                        setErrorMessage('커뮤니티 글이 아닙니다.');\n                    }\n                } else {\n                    setErrorMessage('Invalid notice ID.');\n                }\n            } catch (error) {\n                setErrorMessage('Failed to connect to the database.');\n            }\n        };\n\n        fetchData();\n    }, [noticeId]);\n\n    const handleAddComment = () => {\n        if (newComment.trim() !== '') {\n            const newComments = [...comments, { text: newComment, id: Date.now(), replies: [], parentId: null }];\n            setComments(newComments);\n            setNewComment('');\n        }\n    };\n\n    const handleAddReply = (parentId) => {\n        if (newReply.trim() !== '') {\n            const newComments = [...comments, { text: newReply, id: Date.now(), replies: [], parentId: parentId }];\n            setComments(newComments);\n            setNewReply('');\n            setReplyTo(null);\n        }\n    };\n\n    const handleReply = (commentId) => {\n        setReplyTo(commentId);\n    };\n\n    return (\n        <div className={styles.postDetailContainer}>\n            {errorMessage ? (\n                <p className={styles.errorMessage}>{errorMessage}</p>\n            ) : (\n                <>\n                    <h1 className={styles.postTitle}>{post.notice_name}</h1>\n                    <p className={styles.postMeta}>\n                        조회수: {post.notice_views} | 작성일: {new Date(post.notice_date).toLocaleDateString()}\n                    </p>\n                    <div className={styles.postContent}>{post.notice_detail}</div>\n                    <div className={styles.commentSection}>\n                        <h2>댓글</h2>\n                        <div className={styles.commentInput}>\n                            <input\n                                type=\"text\"\n                                value={newComment}\n                                onChange={(e) => setNewComment(e.target.value)}\n                                placeholder=\"댓글을 입력하세요\"\n                            />\n                            <button className={styles.button} onClick={handleAddComment}>\n                                댓글 달기\n                            </button>\n                        </div>\n                        <div className={styles.comments}>\n                            {comments\n                                .filter((comment) => comment.parentId === null)\n                                .map((comment) => (\n                                    <div key={comment.id} className={styles.comment}>\n                                        <p>{comment.text}</p>\n                                        <button className={styles.replyButton} onClick={() => handleReply(comment.id)}>\n                                            답글 쓰기\n                                        </button>\n                                        {replyTo === comment.id && (\n                                            <div className={styles.replyInput}>\n                                                <input\n                                                    type=\"text\"\n                                                    value={newReply}\n                                                    onChange={(e) => setNewReply(e.target.value)}\n                                                    placeholder=\"답글을 입력하세요\"\n                                                />\n                                                <button className={styles.button} onClick={() => handleAddReply(comment.id)}>\n                                                    답글 달기\n                                                </button>\n                                            </div>\n                                        )}\n                                        {comments\n                                            .filter((reply) => reply.parentId === comment.id)\n                                            .map((reply) => (\n                                                <div key={reply.id} className={styles.reply}>\n                                                    <p>{reply.text}</p>\n                                                </div>\n                                            ))}\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default PostDetail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}