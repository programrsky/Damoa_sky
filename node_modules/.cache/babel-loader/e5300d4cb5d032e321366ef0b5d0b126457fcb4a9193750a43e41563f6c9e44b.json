{"ast":null,"code":"var _jsxFileName = \"/Users/programsky/Documents/GitHub/Damoa_sky/src/component/PostDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from '../css/PostDetail.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostDetail = () => {\n  _s();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const noticeId = searchParams.get('notice_id');\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [replyTo, setReplyTo] = useState(null);\n  const [newReply, setNewReply] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let baseURL = '';\n        if (process.env.NODE_ENV === 'development') {\n          baseURL = 'http://121.139.20.242:5100';\n        }\n        const response = await axios.get(`${baseURL}/api/notice_select`, {\n          params: {\n            notice_id: noticeId\n          }\n        });\n        if (response.data.valid) {\n          if (response.data.data[0].notice_auth === 1) {\n            setPost(response.data.data[0]);\n          } else {\n            setErrorMessage('커뮤니티 글이 아닙니다.');\n          }\n        } else {\n          setErrorMessage('Invalid notice ID.');\n        }\n      } catch (error) {\n        setErrorMessage('Failed to connect to the database.');\n      }\n    };\n    fetchData();\n  }, [noticeId]);\n  const handleAddComment = () => {\n    if (newComment.trim() !== '') {\n      const newComments = [...comments, {\n        text: newComment,\n        id: Date.now(),\n        replies: [],\n        parentId: null\n      }];\n      setComments(newComments);\n      setNewComment('');\n    }\n  };\n  const handleAddReply = parentId => {\n    if (newReply.trim() !== '') {\n      const newComments = [...comments, {\n        text: newReply,\n        id: Date.now(),\n        replies: [],\n        parentId: parentId\n      }];\n      setComments(newComments);\n      setNewReply('');\n      setReplyTo(null);\n    }\n  };\n  const handleReply = commentId => {\n    setReplyTo(commentId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.postDetailContainer,\n    children: errorMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.errorMessage,\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.postTitle,\n        children: post.notice_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.postMeta,\n        children: [\"\\uC870\\uD68C\\uC218: \", post.notice_views / 2, \" | \\uC791\\uC131\\uC77C: \", new Date(post.notice_date).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postContent,\n        dangerouslySetInnerHTML: {\n          __html: post.notice_detail\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.commentSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uB313\\uAE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.commentInput,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: handleAddComment,\n            children: \"\\uB313\\uAE00 \\uB2EC\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.comments,\n          children: comments.filter(comment => comment.parentId === null).map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.comment,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.replyButton,\n              onClick: () => handleReply(comment.id),\n              children: \"\\uB2F5\\uAE00 \\uC4F0\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 41\n            }, this), replyTo === comment.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.replyInput,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newReply,\n                onChange: e => setNewReply(e.target.value),\n                placeholder: \"\\uB2F5\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.button,\n                onClick: () => handleAddReply(comment.id),\n                children: \"\\uB2F5\\uAE00 \\uB2EC\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 45\n            }, this), comments.filter(reply => reply.parentId === comment.id).map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.reply,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: reply.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 53\n              }, this)\n            }, reply.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 49\n            }, this))]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(PostDetail, \"GIP6ukAZiS7isAQEbaRl9Rkds78=\", false, function () {\n  return [useLocation];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","PostDetail","_s","location","searchParams","URLSearchParams","search","noticeId","get","post","setPost","comments","setComments","newComment","setNewComment","replyTo","setReplyTo","newReply","setNewReply","errorMessage","setErrorMessage","fetchData","baseURL","process","env","NODE_ENV","response","params","notice_id","data","valid","notice_auth","error","handleAddComment","trim","newComments","text","id","Date","now","replies","parentId","handleAddReply","handleReply","commentId","className","postDetailContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","postTitle","notice_name","postMeta","notice_views","notice_date","toLocaleDateString","postContent","dangerouslySetInnerHTML","__html","notice_detail","commentSection","commentInput","type","value","onChange","e","target","placeholder","button","onClick","filter","comment","map","replyButton","replyInput","reply","_c","$RefreshReg$"],"sources":["/Users/programsky/Documents/GitHub/Damoa_sky/src/component/PostDetail.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from '../css/PostDetail.module.css';\n\nconst PostDetail = () => {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    const noticeId = searchParams.get('notice_id');\n    \n    const [post, setPost] = useState({});\n    const [comments, setComments] = useState([]);\n    const [newComment, setNewComment] = useState('');\n    const [replyTo, setReplyTo] = useState(null);\n    const [newReply, setNewReply] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                let baseURL = '';\n                if (process.env.NODE_ENV === 'development') {\n                    baseURL = 'http://121.139.20.242:5100';\n                }\n                const response = await axios.get(`${baseURL}/api/notice_select`, {\n                    params: { notice_id: noticeId },\n                });\n                if (response.data.valid) {\n                    if (response.data.data[0].notice_auth === 1) {\n                        setPost(response.data.data[0]);\n                    } else {\n                        setErrorMessage('커뮤니티 글이 아닙니다.');\n                    }\n                } else {\n                    setErrorMessage('Invalid notice ID.');\n                }\n            } catch (error) {\n                setErrorMessage('Failed to connect to the database.');\n            }\n        };\n\n        fetchData();\n    }, [noticeId]);\n\n    const handleAddComment = () => {\n        if (newComment.trim() !== '') {\n            const newComments = [...comments, { text: newComment, id: Date.now(), replies: [], parentId: null }];\n            setComments(newComments);\n            setNewComment('');\n        }\n    };\n\n    const handleAddReply = (parentId) => {\n        if (newReply.trim() !== '') {\n            const newComments = [...comments, { text: newReply, id: Date.now(), replies: [], parentId: parentId }];\n            setComments(newComments);\n            setNewReply('');\n            setReplyTo(null);\n        }\n    };\n\n    const handleReply = (commentId) => {\n        setReplyTo(commentId);\n    };\n\n    return (\n        <div className={styles.postDetailContainer}>\n            {errorMessage ? (\n                <p className={styles.errorMessage}>{errorMessage}</p>\n            ) : (\n                <>\n                    <h1 className={styles.postTitle}>{post.notice_name}</h1>\n                    <p className={styles.postMeta}>\n                        조회수: {post.notice_views/2} | 작성일: {new Date(post.notice_date).toLocaleDateString()}\n                    </p>\n                    <div className={styles.postContent} dangerouslySetInnerHTML={{ __html: post.notice_detail }} />\n                    <div className={styles.commentSection}>\n                        <h2>댓글</h2>\n                        <div className={styles.commentInput}>\n                            <input\n                                type=\"text\"\n                                value={newComment}\n                                onChange={(e) => setNewComment(e.target.value)}\n                                placeholder=\"댓글을 입력하세요\"\n                            />\n                            <button className={styles.button} onClick={handleAddComment}>\n                                댓글 달기\n                            </button>\n                        </div>\n                        <div className={styles.comments}>\n                            {comments\n                                .filter((comment) => comment.parentId === null)\n                                .map((comment) => (\n                                    <div key={comment.id} className={styles.comment}>\n                                        <p>{comment.text}</p>\n                                        <button className={styles.replyButton} onClick={() => handleReply(comment.id)}>\n                                            답글 쓰기\n                                        </button>\n                                        {replyTo === comment.id && (\n                                            <div className={styles.replyInput}>\n                                                <input\n                                                    type=\"text\"\n                                                    value={newReply}\n                                                    onChange={(e) => setNewReply(e.target.value)}\n                                                    placeholder=\"답글을 입력하세요\"\n                                                />\n                                                <button className={styles.button} onClick={() => handleAddReply(comment.id)}>\n                                                    답글 달기\n                                                </button>\n                                            </div>\n                                        )}\n                                        {comments\n                                            .filter((reply) => reply.parentId === comment.id)\n                                            .map((reply) => (\n                                                <div key={reply.id} className={styles.reply}>\n                                                    <p>{reply.text}</p>\n                                                </div>\n                                            ))}\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default PostDetail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}