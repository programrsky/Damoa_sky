{"ast":null,"code":"var _jsxFileName = \"/Users/programsky/Documents/GitHub/Damoa_sky/src/component/NoticeBox.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport style from '../css/Notice.module.css';\nimport NoticeBox from '../component/NoticeBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Notice() {\n  _s();\n  const [notices, setNotices] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchNotices = async () => {\n      try {\n        const response = await fetch('/api/notice_select', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            notice_auth: 'your_auth_value'\n          }) // replace 'your_auth_value' with actual value\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const result = await response.json();\n        if (result.valid) {\n          setNotices(result.data);\n        } else {\n          setNotices([]);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchNotices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.container,\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 27\n      }, this), notices.map((notice, index) => /*#__PURE__*/_jsxDEV(NoticeBox, {\n        notice: notice\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Notice, \"6DWXRghIo/+dKHEwRnYnljXqNwE=\");\n_c = Notice;\nvar _c;\n$RefreshReg$(_c, \"Notice\");","map":{"version":3,"names":["useEffect","useState","style","NoticeBox","jsxDEV","_jsxDEV","Fragment","_Fragment","Notice","_s","notices","setNotices","error","setError","fetchNotices","response","fetch","method","headers","body","JSON","stringify","notice_auth","ok","Error","result","json","valid","data","message","children","GlobalStyle","fileName","_jsxFileName","lineNumber","columnNumber","className","container","map","notice","index","_c","$RefreshReg$"],"sources":["/Users/programsky/Documents/GitHub/Damoa_sky/src/component/NoticeBox.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport style from '../css/Notice.module.css';\nimport NoticeBox from '../component/NoticeBox';\n\nexport default function Notice() {\n    const [notices, setNotices] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchNotices = async () => {\n            try {\n                const response = await fetch('/api/notice_select', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ notice_auth: 'your_auth_value' }), // replace 'your_auth_value' with actual value\n                });\n\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n\n                const result = await response.json();\n                if (result.valid) {\n                    setNotices(result.data);\n                } else {\n                    setNotices([]);\n                }\n            } catch (error) {\n                setError(error.message);\n            }\n        };\n\n        fetchNotices();\n    }, []);\n\n    return (\n        <>\n            <GlobalStyle />\n            <div className={style.container}>\n                {error && <p>{error}</p>}\n                {notices.map((notice, index) => (\n                    <NoticeBox key={index} notice={notice} />\n                ))}\n            </div>\n        </>\n    );\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;UAC/CC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,WAAW,EAAE;UAAkB,CAAC,CAAC,CAAE;QAC9D,CAAC,CAAC;QAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QAEA,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QACpC,IAAID,MAAM,CAACE,KAAK,EAAE;UACdhB,UAAU,CAACc,MAAM,CAACG,IAAI,CAAC;QAC3B,CAAC,MAAM;UACHjB,UAAU,CAAC,EAAE,CAAC;QAClB;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAACiB,OAAO,CAAC;MAC3B;IACJ,CAAC;IAEDf,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACIzB,OAAA,CAAC0B,WAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACf9B,OAAA;MAAK+B,SAAS,EAAElC,KAAK,CAACmC,SAAU;MAAAP,QAAA,GAC3BlB,KAAK,iBAAIP,OAAA;QAAAyB,QAAA,EAAIlB;MAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACvBzB,OAAO,CAAC4B,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACvBnC,OAAA,CAACF,SAAS;QAAaoC,MAAM,EAAEA;MAAO,GAAtBC,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eACR,CAAC;AAEX;AAAC1B,EAAA,CA5CuBD,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}