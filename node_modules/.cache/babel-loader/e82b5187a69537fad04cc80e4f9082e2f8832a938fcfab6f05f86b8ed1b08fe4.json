{"ast":null,"code":"var _jsxFileName = \"/Users/programsky/Documents/GitHub/Damoa_sky/src/component/NoticeBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from '../css/Notice.module.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoticeBox() {\n  _s();\n  const [data, setData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Define the base URL\n        let baseURL = '';\n        if (process.env.NODE_ENV === 'development') {\n          // If in development environment, use local IP\n          baseURL = 'http://121.139.20.242:5100';\n        }\n        const response = await axios.post(`${baseURL}/api/notice_selectlist`, {\n          notice_auth: 3\n        });\n        if (response.data.valid) {\n          setData(response.data.data);\n        } else {\n          setErrorMessage('리스트를 불러오는데 실패하였습니다.');\n        }\n      } catch (error) {\n        setErrorMessage('데이터베이스 연결이 실패하였습니다.');\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.box,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${styles['text-block']} ${styles.title}`,\n        children: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), data.map((notice, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles['text-block'],\n        children: [notice.title, \": \", notice.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(NoticeBox, \"ciz5z4TZtafaCOaSKT4lYkUcaZk=\");\n_c = NoticeBox;\nvar _c;\n$RefreshReg$(_c, \"NoticeBox\");","map":{"version":3,"names":["React","useState","useEffect","styles","axios","jsxDEV","_jsxDEV","NoticeBox","_s","data","setData","errorMessage","setErrorMessage","fetchData","baseURL","process","env","NODE_ENV","response","post","notice_auth","valid","error","className","container","children","box","title","fileName","_jsxFileName","lineNumber","columnNumber","map","notice","index","content","_c","$RefreshReg$"],"sources":["/Users/programsky/Documents/GitHub/Damoa_sky/src/component/NoticeBox.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from '../css/Notice.module.css';\nimport axios from 'axios';\n\nexport default function NoticeBox() {\n    const [data, setData] = useState([]);\n    const [errorMessage, setErrorMessage] = useState('');\n    \n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Define the base URL\n                let baseURL = '';\n                if (process.env.NODE_ENV === 'development') {\n                    // If in development environment, use local IP\n                    baseURL = 'http://121.139.20.242:5100';\n                }\n                const response = await axios.post(`${baseURL}/api/notice_selectlist`, {\n                    notice_auth: 3,\n                });\n                if (response.data.valid) {\n                    setData(response.data.data);\n                } else {\n                    setErrorMessage('리스트를 불러오는데 실패하였습니다.');\n                }\n            } catch (error) {\n                setErrorMessage('데이터베이스 연결이 실패하였습니다.');\n            }\n        };\n  \n        fetchData();\n    }, []);\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.box}>\n                <p className={`${styles['text-block']} ${styles.title}`}>공지사항</p>\n                {/* Mapping through the data to display notices */}\n                {data.map((notice, index) => (\n                    <p key={index} className={styles['text-block']}>\n                        {notice.title}: {notice.content}\n                    </p>\n                ))}\n                {errorMessage && <p>{errorMessage}</p>}\n            </div>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA;QACA,IAAIC,OAAO,GAAG,EAAE;QAChB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;UACxC;UACAH,OAAO,GAAG,4BAA4B;QAC1C;QACA,MAAMI,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAE,GAAEL,OAAQ,wBAAuB,EAAE;UAClEM,WAAW,EAAE;QACjB,CAAC,CAAC;QACF,IAAIF,QAAQ,CAACT,IAAI,CAACY,KAAK,EAAE;UACrBX,OAAO,CAACQ,QAAQ,CAACT,IAAI,CAACA,IAAI,CAAC;QAC/B,CAAC,MAAM;UACHG,eAAe,CAAC,qBAAqB,CAAC;QAC1C;MACJ,CAAC,CAAC,OAAOU,KAAK,EAAE;QACZV,eAAe,CAAC,qBAAqB,CAAC;MAC1C;IACJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAKiB,SAAS,EAAEpB,MAAM,CAACqB,SAAU;IAAAC,QAAA,eAC7BnB,OAAA;MAAKiB,SAAS,EAAEpB,MAAM,CAACuB,GAAI;MAAAD,QAAA,gBACvBnB,OAAA;QAAGiB,SAAS,EAAG,GAAEpB,MAAM,CAAC,YAAY,CAAE,IAAGA,MAAM,CAACwB,KAAM,EAAE;QAAAF,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAEhEtB,IAAI,CAACuB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACpB5B,OAAA;QAAeiB,SAAS,EAAEpB,MAAM,CAAC,YAAY,CAAE;QAAAsB,QAAA,GAC1CQ,MAAM,CAACN,KAAK,EAAC,IAAE,EAACM,MAAM,CAACE,OAAO;MAAA,GAD3BD,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC,EACDpB,YAAY,iBAAIL,OAAA;QAAAmB,QAAA,EAAId;MAAY;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACvB,EAAA,CA3CuBD,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}