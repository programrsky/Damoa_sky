{"ast":null,"code":"import React,{useState}from\"react\";import{BrowserRouter as Router,Route,Routes,useNavigate}from\"react-router-dom\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function LoginPage(){const[user_id,setUsername]=useState(\"\");const[user_pw,setPassword]=useState(\"\");const navigate=useNavigate();const handleLogin=async()=>{try{// Define the base URL\nlet baseURL=\"\";if(process.env.NODE_ENV===\"development\"){// If in development environment, use local IP\nbaseURL=\"http://121.139.20.242:5100\";}// Make the request with the appropriate base URL\nconst response=await axios.post(\"\".concat(baseURL,\"/api/check\"),{user_id:user_id,user_pw:user_pw});if(response.data.valid){localStorage.setItem(\"user_id\",user_id);// Using localStorage instead of sessionStorage\nnavigate(\"/\");// Navigate to main page on successful login\n}else{alert(\"아이디 또는 비밀번호가 잘못되었습니다.\");}}catch(error){alert(\"데이터베이스 연결이 실패하였습니다.\");}};const handleKeyDown=e=>{if(e.key===\"Enter\"){handleLogin();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"CoMon \\uC11C\\uBC84 \\uBA54\\uC778 \\uD398\\uC774\\uC9C0\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC548\\uB155\\uD558\\uC138\\uC694, CoMon \\uC11C\\uBC84 \\uBA54\\uC778 \\uD398\\uC774\\uC9C0\\uC785\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uC0AC\\uC6A9\\uC790 \\uC774\\uB984\",value:user_id,onChange:e=>setUsername(e.target.value),onKeyDown:handleKeyDown}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\",value:user_pw,onChange:e=>setPassword(e.target.value),onKeyDown:handleKeyDown}),/*#__PURE__*/_jsx(\"button\",{className:\"loginbutton\",onClick:handleLogin,children:\"\\uB85C\\uADF8\\uC778\"})]})]});}","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","LoginPage","user_id","setUsername","user_pw","setPassword","navigate","handleLogin","baseURL","process","env","NODE_ENV","response","post","concat","data","valid","localStorage","setItem","alert","error","handleKeyDown","e","key","className","children","type","placeholder","value","onChange","target","onKeyDown","onClick"],"sources":["/home/damoa_react/src/screens/App/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  useNavigate,\n} from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function LoginPage() {\n  const [user_id, setUsername] = useState(\"\");\n  const [user_pw, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleLogin = async () => {\n    try {\n      // Define the base URL\n      let baseURL = \"\";\n      if (process.env.NODE_ENV === \"development\") {\n        // If in development environment, use local IP\n        baseURL = \"http://121.139.20.242:5100\";\n      }\n      // Make the request with the appropriate base URL\n      const response = await axios.post(`${baseURL}/api/check`, {\n        user_id: user_id,\n        user_pw: user_pw,\n      });\n      if (response.data.valid) {\n        localStorage.setItem(\"user_id\", user_id); // Using localStorage instead of sessionStorage\n        navigate(\"/\"); // Navigate to main page on successful login\n      } else {\n        alert(\"아이디 또는 비밀번호가 잘못되었습니다.\");\n      }\n    } catch (error) {\n      alert(\"데이터베이스 연결이 실패하였습니다.\");\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleLogin();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>CoMon 서버 메인 페이지</h1>\n      <p>안녕하세요, CoMon 서버 메인 페이지입니다.</p>\n\n      <div className=\"login-form\">\n        <input\n          type=\"text\"\n          placeholder=\"사용자 이름\"\n          value={user_id}\n          onChange={(e) => setUsername(e.target.value)}\n          onKeyDown={handleKeyDown}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"비밀번호\"\n          value={user_pw}\n          onChange={(e) => setPassword(e.target.value)}\n          onKeyDown={handleKeyDown}\n        />\n        <button className=\"loginbutton\" onClick={handleLogin}>\n          로그인\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OACEC,aAAa,GAAI,CAAAC,MAAM,CACvBC,KAAK,CACLC,MAAM,CACNC,WAAW,KACN,kBAAkB,CACzB,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,cAAe,SAAS,CAAAC,SAASA,CAAA,CAAG,CAClC,KAAM,CAACC,OAAO,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAC3C,KAAM,CAACc,OAAO,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAC3C,KAAM,CAAAgB,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAY,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACF;AACA,GAAI,CAAAC,OAAO,CAAG,EAAE,CAChB,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAAE,CAC1C;AACAH,OAAO,CAAG,4BAA4B,CACxC,CACA;AACA,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAhB,KAAK,CAACiB,IAAI,IAAAC,MAAA,CAAIN,OAAO,eAAc,CACxDN,OAAO,CAAEA,OAAO,CAChBE,OAAO,CAAEA,OACX,CAAC,CAAC,CACF,GAAIQ,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAE,CACvBC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAEhB,OAAO,CAAC,CAAE;AAC1CI,QAAQ,CAAC,GAAG,CAAC,CAAE;AACjB,CAAC,IAAM,CACLa,KAAK,CAAC,uBAAuB,CAAC,CAChC,CACF,CAAE,MAAOC,KAAK,CAAE,CACdD,KAAK,CAAC,qBAAqB,CAAC,CAC9B,CACF,CAAC,CAED,KAAM,CAAAE,aAAa,CAAIC,CAAC,EAAK,CAC3B,GAAIA,CAAC,CAACC,GAAG,GAAK,OAAO,CAAE,CACrBhB,WAAW,CAAC,CAAC,CACf,CACF,CAAC,CAED,mBACEP,KAAA,QAAKwB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB3B,IAAA,OAAA2B,QAAA,CAAI,oDAAe,CAAI,CAAC,cACxB3B,IAAA,MAAA2B,QAAA,CAAG,uGAA0B,CAAG,CAAC,cAEjCzB,KAAA,QAAKwB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB3B,IAAA,UACE4B,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,iCAAQ,CACpBC,KAAK,CAAE1B,OAAQ,CACf2B,QAAQ,CAAGP,CAAC,EAAKnB,WAAW,CAACmB,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE,CAC7CG,SAAS,CAAEV,aAAc,CAC1B,CAAC,cACFvB,IAAA,UACE4B,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,0BAAM,CAClBC,KAAK,CAAExB,OAAQ,CACfyB,QAAQ,CAAGP,CAAC,EAAKjB,WAAW,CAACiB,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE,CAC7CG,SAAS,CAAEV,aAAc,CAC1B,CAAC,cACFvB,IAAA,WAAQ0B,SAAS,CAAC,aAAa,CAACQ,OAAO,CAAEzB,WAAY,CAAAkB,QAAA,CAAC,oBAEtD,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}