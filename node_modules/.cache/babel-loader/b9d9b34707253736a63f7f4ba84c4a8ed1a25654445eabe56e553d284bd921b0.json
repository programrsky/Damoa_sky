{"ast":null,"code":"var _jsxFileName = \"/home/damoa_react/src/utils/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { createGuestSession } from \"./Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [userPw, setUserPw] = useState(\"\");\n  const [session, setSession] = useState(null);\n  const [error, setError] = useState(null);\n  const handleLogin = async () => {\n    try {\n      const data = await createGuestSession(userId, userPw);\n      if (data.userValid) {\n        setSession(`로그인 성공, 게스트 세션 ID: ${data.guest_session_id}`); // 성공 메시지 및 세션 ID 설정\n        setError(null);\n      } else {\n        setError(\"로그인 실패\");\n        setSession(null);\n      }\n    } catch (error) {\n      setError(error.message);\n      setSession(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"User ID\",\n      value: userId,\n      onChange: e => setUserId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: userPw,\n      onChange: e => setUserPw(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), session && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC138\\uC158: \", session]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC624\\uB958: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"ylN6aM2+5HjH8LSs+bQyYuR9Jbo=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","createGuestSession","jsxDEV","_jsxDEV","Login","_s","userId","setUserId","userPw","setUserPw","session","setSession","error","setError","handleLogin","data","userValid","guest_session_id","message","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/damoa_react/src/utils/Login.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { createGuestSession } from \"./Api\";\n\nconst Login = () => {\n  const [userId, setUserId] = useState(\"\");\n  const [userPw, setUserPw] = useState(\"\");\n  const [session, setSession] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleLogin = async () => {\n    try {\n      const data = await createGuestSession(userId, userPw);\n      if (data.userValid) {\n        setSession(`로그인 성공, 게스트 세션 ID: ${data.guest_session_id}`); // 성공 메시지 및 세션 ID 설정\n        setError(null);\n      } else {\n        setError(\"로그인 실패\");\n        setSession(null);\n      }\n    } catch (error: any) {\n      setError(error.message);\n      setSession(null);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"User ID\"\n        value={userId}\n        onChange={(e) => setUserId(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={userPw}\n        onChange={(e) => setUserPw(e.target.value)}\n      />\n      <button onClick={handleLogin}>로그인</button>\n      {session && <div>세션: {session}</div>}\n      {error && <div>오류: {error}</div>}\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,kBAAkB,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EAC3D,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMd,kBAAkB,CAACK,MAAM,EAAEE,MAAM,CAAC;MACrD,IAAIO,IAAI,CAACC,SAAS,EAAE;QAClBL,UAAU,CAAE,sBAAqBI,IAAI,CAACE,gBAAiB,EAAC,CAAC,CAAC,CAAC;QAC3DJ,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,MAAM;QACLA,QAAQ,CAAC,QAAQ,CAAC;QAClBF,UAAU,CAAC,IAAI,CAAC;MAClB;IACF,CAAC,CAAC,OAAOC,KAAU,EAAE;MACnBC,QAAQ,CAACD,KAAK,CAACM,OAAO,CAAC;MACvBP,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EAED,oBACER,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,SAAS;MACrBC,KAAK,EAAEhB,MAAO;MACdiB,QAAQ,EAAGC,CAAC,IAAKjB,SAAS,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF1B,OAAA;MACEiB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEd,MAAO;MACde,QAAQ,EAAGC,CAAC,IAAKf,SAAS,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF1B,OAAA;MAAQ2B,OAAO,EAAEhB,WAAY;MAAAK,QAAA,EAAC;IAAG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzCnB,OAAO,iBAAIP,OAAA;MAAAgB,QAAA,GAAK,gBAAI,EAACT,OAAO;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACnCjB,KAAK,iBAAIT,OAAA;MAAAgB,QAAA,GAAK,gBAAI,EAACP,KAAK;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAACxB,EAAA,CAzCID,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AA2CX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}