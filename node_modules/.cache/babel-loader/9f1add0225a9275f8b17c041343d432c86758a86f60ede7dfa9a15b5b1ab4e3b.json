{"ast":null,"code":"var _jsxFileName = \"/Users/programsky/Documents/GitHub/Damoa_sky/src/component/PostDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from '../css/PostDetail.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetail = () => {\n  _s();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const noticeId = searchParams.get('notice_id');\n  const post = communityData.find(item => item.id === Number(noticeId)) || {};\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [replyTo, setReplyTo] = useState(null);\n  const [newReply, setNewReply] = useState('');\n  const [data, setData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let baseURL = '';\n        if (process.env.NODE_ENV === 'development') {\n          baseURL = 'http://121.139.20.242:5100';\n        }\n        const response = await axios.get(`${baseURL}/api/notice_select`, {\n          params: {\n            notice_id: noticeId\n          }\n        });\n        if (response.data.valid) {\n          setData(response.data.data);\n        } else {\n          setErrorMessage('아이디 또는 비밀번호가 잘못되었습니다.');\n        }\n      } catch (error) {\n        setErrorMessage('데이터베이스 연결이 실패하였습니다.');\n      }\n    };\n    fetchData();\n  }, [noticeId]);\n  const handleAddComment = () => {\n    if (newComment.trim() !== '') {\n      const newComments = [...comments, {\n        text: newComment,\n        id: Date.now(),\n        replies: [],\n        parentId: null\n      }];\n      setComments(newComments);\n      setNewComment('');\n    }\n  };\n  const handleAddReply = parentId => {\n    if (newReply.trim() !== '') {\n      const newComments = [...comments, {\n        text: newReply,\n        id: Date.now(),\n        replies: [],\n        parentId: parentId\n      }];\n      setComments(newComments);\n      setNewReply('');\n      setReplyTo(null);\n    }\n  };\n  const handleReply = commentId => {\n    setReplyTo(commentId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.postDetailContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.postTitle,\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.postMeta,\n      children: [\"\\uC870\\uD68C\\uC218: \", post.views, \" | \\uC791\\uC131\\uC77C: \", post.date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postContent,\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.commentSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB313\\uAE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.commentInput,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          onClick: handleAddComment,\n          children: \"\\uB313\\uAE00 \\uB2EC\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.comments,\n        children: comments.filter(comment => comment.parentId === null).map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.comment,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.replyButton,\n            onClick: () => handleReply(comment.id),\n            children: \"\\uB2F5\\uAE00 \\uC4F0\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this), replyTo === comment.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.replyInput,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newReply,\n              onChange: e => setNewReply(e.target.value),\n              placeholder: \"\\uB2F5\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.button,\n              onClick: () => handleAddReply(comment.id),\n              children: \"\\uB2F5\\uAE00 \\uB2EC\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 37\n          }, this), comments.filter(reply => reply.parentId === comment.id).map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.reply,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: reply.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 45\n            }, this)\n          }, reply.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 41\n          }, this))]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(PostDetail, \"DSIDGU2dXV15M0ORPyKOYzHAtZg=\", false, function () {\n  return [useLocation];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","styles","jsxDEV","_jsxDEV","PostDetail","_s","location","searchParams","URLSearchParams","search","noticeId","get","post","communityData","find","item","id","Number","comments","setComments","newComment","setNewComment","replyTo","setReplyTo","newReply","setNewReply","data","setData","errorMessage","setErrorMessage","fetchData","baseURL","process","env","NODE_ENV","response","params","notice_id","valid","error","handleAddComment","trim","newComments","text","Date","now","replies","parentId","handleAddReply","handleReply","commentId","className","postDetailContainer","children","postTitle","title","fileName","_jsxFileName","lineNumber","columnNumber","postMeta","views","date","postContent","content","commentSection","commentInput","type","value","onChange","e","target","placeholder","button","onClick","filter","comment","map","replyButton","replyInput","reply","_c","$RefreshReg$"],"sources":["/Users/programsky/Documents/GitHub/Damoa_sky/src/component/PostDetail.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from '../css/PostDetail.module.css';\n\nconst PostDetail = () => {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    const noticeId = searchParams.get('notice_id');\n    \n    const post = communityData.find((item) => item.id === Number(noticeId)) || {};\n    const [comments, setComments] = useState([]);\n    const [newComment, setNewComment] = useState('');\n    const [replyTo, setReplyTo] = useState(null);\n    const [newReply, setNewReply] = useState('');\n    const [data, setData] = useState([]);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                let baseURL = '';\n                if (process.env.NODE_ENV === 'development') {\n                    baseURL = 'http://121.139.20.242:5100';\n                }\n                const response = await axios.get(`${baseURL}/api/notice_select`, {\n                    params: { notice_id: noticeId },\n                });\n                if (response.data.valid) {\n                    setData(response.data.data);\n                } else {\n                    setErrorMessage('아이디 또는 비밀번호가 잘못되었습니다.');\n                }\n            } catch (error) {\n                setErrorMessage('데이터베이스 연결이 실패하였습니다.');\n            }\n        };\n\n        fetchData();\n    }, [noticeId]);\n\n    const handleAddComment = () => {\n        if (newComment.trim() !== '') {\n            const newComments = [...comments, { text: newComment, id: Date.now(), replies: [], parentId: null }];\n            setComments(newComments);\n            setNewComment('');\n        }\n    };\n\n    const handleAddReply = (parentId) => {\n        if (newReply.trim() !== '') {\n            const newComments = [...comments, { text: newReply, id: Date.now(), replies: [], parentId: parentId }];\n            setComments(newComments);\n            setNewReply('');\n            setReplyTo(null);\n        }\n    };\n\n    const handleReply = (commentId) => {\n        setReplyTo(commentId);\n    };\n\n    return (\n        <div className={styles.postDetailContainer}>\n            <h1 className={styles.postTitle}>{post.title}</h1>\n            <p className={styles.postMeta}>\n                조회수: {post.views} | 작성일: {post.date}\n            </p>\n            <div className={styles.postContent}>{post.content}</div>\n            <div className={styles.commentSection}>\n                <h2>댓글</h2>\n                <div className={styles.commentInput}>\n                    <input\n                        type=\"text\"\n                        value={newComment}\n                        onChange={(e) => setNewComment(e.target.value)}\n                        placeholder=\"댓글을 입력하세요\"\n                    />\n                    <button className={styles.button} onClick={handleAddComment}>\n                        댓글 달기\n                    </button>\n                </div>\n                <div className={styles.comments}>\n                    {comments\n                        .filter((comment) => comment.parentId === null)\n                        .map((comment) => (\n                            <div key={comment.id} className={styles.comment}>\n                                <p>{comment.text}</p>\n                                <button className={styles.replyButton} onClick={() => handleReply(comment.id)}>\n                                    답글 쓰기\n                                </button>\n                                {replyTo === comment.id && (\n                                    <div className={styles.replyInput}>\n                                        <input\n                                            type=\"text\"\n                                            value={newReply}\n                                            onChange={(e) => setNewReply(e.target.value)}\n                                            placeholder=\"답글을 입력하세요\"\n                                        />\n                                        <button className={styles.button} onClick={() => handleAddReply(comment.id)}>\n                                            답글 달기\n                                        </button>\n                                    </div>\n                                )}\n                                {comments\n                                    .filter((reply) => reply.parentId === comment.id)\n                                    .map((reply) => (\n                                        <div key={reply.id} className={styles.reply}>\n                                            <p>{reply.text}</p>\n                                        </div>\n                                    ))}\n                            </div>\n                        ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PostDetail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}