{"ast":null,"code":"var _jsxFileName = \"/Users/programsky/Documents/GitHub/Damoa_sky/src/component/NoticeBox.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import styles from '../css/Notice.module.css';\n\n// export default function NoticeBox() {\n//     return (\n//         // <div className={styles.container}>\n//         <div className={styles.box}>\n//             <p className={`${styles['text-block']} ${styles.title}`}>공지사항</p>\n//             <p className={styles['text-block']}>\n//                 리뷰 작성 시 유의사항: 상호 존중과 건전한 커뮤니티 문화 조성을 위해, 비방이나 욕설이 포함된 리뷰는\n//                 삼가해 주시기 바랍니다. 객관적이고 상세한 리뷰가 다른 이용자에게 큰 도움이 됩니다.\n//             </p>\n//         </div>\n//         // </div>\n//     );\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport styles from '../css/Notice.module.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NoticeBox() {\n  _s();\n  const [data, setData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Define the base URL\n        let baseURL = '';\n        if (process.env.NODE_ENV === 'development') {\n          // If in development environment, use local IP\n          baseURL = 'http://121.139.20.242:5100';\n        }\n        const response = await axios.post(`${baseURL}/api/notice_selectlist`, {\n          notice_auth: 3\n        });\n        if (response.data.valid) {\n          setData(response.data.data);\n        } else {\n          setErrorMessage('리스트를 불러오는데 실패하였습니다.');\n        }\n      } catch (error) {\n        setErrorMessage('데이터베이스 연결이 실패하였습니다.');\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [data.map(item =>\n    /*#__PURE__*/\n    //<div key={item.id} className={styles.container}>\n    _jsxDEV(\"div\", {\n      className: styles.box,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${styles['text-block']} ${styles.title}`,\n        children: item.notice_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles['text-block'],\n        children: item.notice_detail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this)\n    //</div>\n    ), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n}\n_s(NoticeBox, \"ciz5z4TZtafaCOaSKT4lYkUcaZk=\");\n_c = NoticeBox;\nvar _c;\n$RefreshReg$(_c, \"NoticeBox\");","map":{"version":3,"names":["React","useState","useEffect","styles","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","NoticeBox","_s","data","setData","errorMessage","setErrorMessage","fetchData","baseURL","process","env","NODE_ENV","response","post","notice_auth","valid","error","children","map","item","className","box","title","notice_name","fileName","_jsxFileName","lineNumber","columnNumber","notice_detail","_c","$RefreshReg$"],"sources":["/Users/programsky/Documents/GitHub/Damoa_sky/src/component/NoticeBox.jsx"],"sourcesContent":["// import React from 'react';\n// import styles from '../css/Notice.module.css';\n\n// export default function NoticeBox() {\n//     return (\n//         // <div className={styles.container}>\n//         <div className={styles.box}>\n//             <p className={`${styles['text-block']} ${styles.title}`}>공지사항</p>\n//             <p className={styles['text-block']}>\n//                 리뷰 작성 시 유의사항: 상호 존중과 건전한 커뮤니티 문화 조성을 위해, 비방이나 욕설이 포함된 리뷰는\n//                 삼가해 주시기 바랍니다. 객관적이고 상세한 리뷰가 다른 이용자에게 큰 도움이 됩니다.\n//             </p>\n//         </div>\n//         // </div>\n//     );\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport styles from '../css/Notice.module.css';\nimport axios from 'axios';\n\nexport default function NoticeBox() {\n    const [data, setData] = useState([]);\n    const [errorMessage, setErrorMessage] = useState('');\n    \n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Define the base URL\n                let baseURL = '';\n                if (process.env.NODE_ENV === 'development') {\n                    // If in development environment, use local IP\n                    baseURL = 'http://121.139.20.242:5100';\n                }\n                const response = await axios.post(`${baseURL}/api/notice_selectlist`, {\n                    notice_auth: 3,\n                });\n                if (response.data.valid) {\n                    setData(response.data.data);\n                } else {\n                    setErrorMessage('리스트를 불러오는데 실패하였습니다.');\n                }\n            } catch (error) {\n                setErrorMessage('데이터베이스 연결이 실패하였습니다.');\n            }\n        };\n  \n        fetchData();\n    }, []);\n\n    return (\n        <>\n            {data.map((item) => (\n                //<div key={item.id} className={styles.container}>\n                    <div className={styles.box}>\n                        <p className={`${styles['text-block']} ${styles.title}`}>{item.notice_name}</p>\n                        {/* Mapping through the data to display notices */}\n                        <p className={styles['text-block']}>\n                            {item.notice_detail}\n                        </p>\n                    </div>\n                //</div>\n            ))}\n            {errorMessage && <p>{errorMessage}</p>}\n        </>\n    );\n}\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA;QACA,IAAIC,OAAO,GAAG,EAAE;QAChB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;UACxC;UACAH,OAAO,GAAG,4BAA4B;QAC1C;QACA,MAAMI,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAE,GAAEL,OAAQ,wBAAuB,EAAE;UAClEM,WAAW,EAAE;QACjB,CAAC,CAAC;QACF,IAAIF,QAAQ,CAACT,IAAI,CAACY,KAAK,EAAE;UACrBX,OAAO,CAACQ,QAAQ,CAACT,IAAI,CAACA,IAAI,CAAC;QAC/B,CAAC,MAAM;UACHG,eAAe,CAAC,qBAAqB,CAAC;QAC1C;MACJ,CAAC,CAAC,OAAOU,KAAK,EAAE;QACZV,eAAe,CAAC,qBAAqB,CAAC;MAC1C;IACJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAAAE,SAAA;IAAAiB,QAAA,GACKd,IAAI,CAACe,GAAG,CAAEC,IAAI;IAAA;IACX;IACIrB,OAAA;MAAKsB,SAAS,EAAEzB,MAAM,CAAC0B,GAAI;MAAAJ,QAAA,gBACvBnB,OAAA;QAAGsB,SAAS,EAAG,GAAEzB,MAAM,CAAC,YAAY,CAAE,IAAGA,MAAM,CAAC2B,KAAM,EAAE;QAAAL,QAAA,EAAEE,IAAI,CAACI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE/E7B,OAAA;QAAGsB,SAAS,EAAEzB,MAAM,CAAC,YAAY,CAAE;QAAAsB,QAAA,EAC9BE,IAAI,CAACS;MAAa;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;IACT;IACH,CAAC,EACDtB,YAAY,iBAAIP,OAAA;MAAAmB,QAAA,EAAIZ;IAAY;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACxC,CAAC;AAEX;AAACzB,EAAA,CA7CuBD,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}