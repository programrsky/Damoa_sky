{"ast":null,"code":"var _jsxFileName = \"/home/damoa_react/src/screens/App/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [user_id, setUsername] = useState(\"\");\n  const [user_pw, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      // Define the base URL\n      let baseURL = \"\";\n      if (process.env.NODE_ENV === \"development\") {\n        // If in development environment, use local IP\n        baseURL = \"http://121.139.20.242:5100\";\n      }\n      // Make the request with the appropriate base URL\n      const response = await axios.post(`${baseURL}/api/check`, {\n        user_id: user_id,\n        user_pw: user_pw\n      });\n      if (response.data.valid) {\n        localStorage.setItem(\"user_id\", user_id); // Using localStorage instead of sessionStorage\n        navigate(\"/\"); // Navigate to main page on successful login\n      } else {\n        alert(\"아이디 또는 비밀번호가 잘못되었습니다.\");\n      }\n    } catch (error) {\n      alert(\"데이터베이스 연결이 실패하였습니다.\");\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleLogin();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Damoa \\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC548\\uB155\\uD558\\uC138\\uC694, Damoa \\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC0AC\\uC6A9\\uC790 \\uC774\\uB984\",\n        value: user_id,\n        onChange: e => setUsername(e.target.value),\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        value: user_pw,\n        onChange: e => setPassword(e.target.value),\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginbutton\",\n        onClick: handleLogin,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"b1TKucjYE4Hdt7yKwNjnVFWvSpI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","useNavigate","axios","jsxDEV","_jsxDEV","LoginPage","_s","user_id","setUsername","user_pw","setPassword","navigate","handleLogin","baseURL","process","env","NODE_ENV","response","post","data","valid","localStorage","setItem","alert","error","handleKeyDown","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/home/damoa_react/src/screens/App/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  useNavigate,\n} from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function LoginPage() {\n  const [user_id, setUsername] = useState(\"\");\n  const [user_pw, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleLogin = async () => {\n    try {\n      // Define the base URL\n      let baseURL = \"\";\n      if (process.env.NODE_ENV === \"development\") {\n        // If in development environment, use local IP\n        baseURL = \"http://121.139.20.242:5100\";\n      }\n      // Make the request with the appropriate base URL\n      const response = await axios.post(`${baseURL}/api/check`, {\n        user_id: user_id,\n        user_pw: user_pw,\n      });\n      if (response.data.valid) {\n        localStorage.setItem(\"user_id\", user_id); // Using localStorage instead of sessionStorage\n        navigate(\"/\"); // Navigate to main page on successful login\n      } else {\n        alert(\"아이디 또는 비밀번호가 잘못되었습니다.\");\n      }\n    } catch (error) {\n      alert(\"데이터베이스 연결이 실패하였습니다.\");\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleLogin();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Damoa 로그인 페이지</h1>\n      <p>안녕하세요, Damoa 로그인 페이지입니다.</p>\n\n      <div className=\"login-form\">\n        <input\n          type=\"text\"\n          placeholder=\"사용자 이름\"\n          value={user_id}\n          onChange={(e) => setUsername(e.target.value)}\n          onKeyDown={handleKeyDown}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"비밀번호\"\n          value={user_pw}\n          onChange={(e) => setPassword(e.target.value)}\n          onKeyDown={handleKeyDown}\n        />\n        <button className=\"loginbutton\" onClick={handleLogin}>\n          로그인\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}