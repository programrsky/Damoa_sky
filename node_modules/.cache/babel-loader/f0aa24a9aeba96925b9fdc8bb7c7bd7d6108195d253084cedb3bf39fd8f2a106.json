{"ast":null,"code":"var _jsxFileName = \"/Users/programsky/Documents/GitHub/Damoa_sky/src/component/NoticeBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from '../css/Notice.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoticeBox() {\n  _s();\n  useEffect(() => {\n    const fetchNotice = async () => {\n      try {\n        // Define the base URL\n        let baseURL = '';\n        if (process.env.NODE_ENV === 'development') {\n          // If in development environment, use local IP\n          baseURL = 'http://121.139.20.242:5100';\n        }\n        const response = await axios.post(`${baseURL}/api/notice_select`, {\n          notice_auth: 3\n        });\n        if (response.data.valid) {} else {\n          setErrorMessage('id값에 맞는 데이터베이스가 없습니다.');\n        }\n      } catch (error) {\n        setErrorMessage('데이터베이스 연결이 실패하였습니다.');\n      }\n    };\n    fetchNotice();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.box,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: `${styles['text-block']} ${styles.title}`,\n      children: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles['text-block'],\n      children: notice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(NoticeBox, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = NoticeBox;\nvar _c;\n$RefreshReg$(_c, \"NoticeBox\");","map":{"version":3,"names":["React","useState","useEffect","axios","styles","jsxDEV","_jsxDEV","NoticeBox","_s","fetchNotice","baseURL","process","env","NODE_ENV","response","post","notice_auth","data","valid","setErrorMessage","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","box","title","notice","_c","$RefreshReg$"],"sources":["/Users/programsky/Documents/GitHub/Damoa_sky/src/component/NoticeBox.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from '../css/Notice.module.css';\n\nexport default function NoticeBox() {\n\n    useEffect(() => {\n        const fetchNotice = async () => {\n            try {\n                // Define the base URL\n                let baseURL = '';\n                if (process.env.NODE_ENV === 'development') {\n                    // If in development environment, use local IP\n                    baseURL = 'http://121.139.20.242:5100';\n                }\n                const response = await axios.post(`${baseURL}/api/notice_select`, {\n                    notice_auth: 3,\n                });\n                if (response.data.valid) {\n                } else {\n                    setErrorMessage('id값에 맞는 데이터베이스가 없습니다.');\n                }\n            } catch (error) {\n                setErrorMessage('데이터베이스 연결이 실패하였습니다.');\n            }\n        };\n\n        fetchNotice();\n    }, []);\n\n    if (error) {\n        return <div className={styles.error}>{error}</div>;\n    }\n\n    return (\n        <div className={styles.box}>\n            <p className={`${styles['text-block']} ${styles.title}`}>공지사항</p>\n            <p className={styles['text-block']}>{notice}</p>\n        </div>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEhCN,SAAS,CAAC,MAAM;IACZ,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA;QACA,IAAIC,OAAO,GAAG,EAAE;QAChB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;UACxC;UACAH,OAAO,GAAG,4BAA4B;QAC1C;QACA,MAAMI,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAE,GAAEL,OAAQ,oBAAmB,EAAE;UAC9DM,WAAW,EAAE;QACjB,CAAC,CAAC;QACF,IAAIF,QAAQ,CAACG,IAAI,CAACC,KAAK,EAAE,CACzB,CAAC,MAAM;UACHC,eAAe,CAAC,uBAAuB,CAAC;QAC5C;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZD,eAAe,CAAC,qBAAqB,CAAC;MAC1C;IACJ,CAAC;IAEDV,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIW,KAAK,EAAE;IACP,oBAAOd,OAAA;MAAKe,SAAS,EAAEjB,MAAM,CAACgB,KAAM;MAAAE,QAAA,EAAEF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACtD;EAEA,oBACIpB,OAAA;IAAKe,SAAS,EAAEjB,MAAM,CAACuB,GAAI;IAAAL,QAAA,gBACvBhB,OAAA;MAAGe,SAAS,EAAG,GAAEjB,MAAM,CAAC,YAAY,CAAE,IAAGA,MAAM,CAACwB,KAAM,EAAE;MAAAN,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjEpB,OAAA;MAAGe,SAAS,EAAEjB,MAAM,CAAC,YAAY,CAAE;MAAAkB,QAAA,EAAEO;IAAM;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd;AAAClB,EAAA,CApCuBD,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}