{"ast":null,"code":"var _jsxFileName = \"/home/damoa_react/src/pages/MainPage/LeftNoticeJsx/UpcomigReleases.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchUpcomingMovies = async () => {\n  const apiKey = '0645d9c6c82d9a5b799a9a0a0ff91f6c';\n  const url = `https://api.themoviedb.org/3/movie/upcoming?api_key=${apiKey}&language=en-US&page=1`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.results;\n};\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    align-self: stretch;\n    flex-grow: 0;\n    flex-shrink: 0;\n    gap: 25px;\n    padding: 40px;\n    border-radius: 10px;\n    background: #1a1a1a;\n    border: 1px solid #262626;\n    margin-right: 30px;\n    margin-left: 30px;\n`;\n_c = Container;\nconst Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    align-self: stretch;\n    flex-grow: 0;\n    flex-shrink: 0;\n    position: relative;\n    gap: 30px;\n`;\n_c2 = Header;\nconst Title = styled.p`\n    flex-grow: 1;\n    font-size: 24px;\n    font-weight: 600;\n    text-align: left;\n    color: #999;\n`;\n_c3 = Title;\nconst IconContainer = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n`;\n_c4 = IconContainer;\nconst RoundButton = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    background: #141414;\n    border: 1px solid #262626;\n    cursor: pointer;\n    &:hover {\n        background-color: #262626;\n    }\n    &:active {\n        background-color: #262626;\n        border: 1px solid red;\n        transition: all 0.3s ease;\n    }\n`;\n_c5 = RoundButton;\nconst SvgIcon = styled.svg`\n    width: 20px;\n    height: 20px;\n`;\n_c6 = SvgIcon;\nconst ContentBlock = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n    align-self: stretch;\n    flex-grow: 0;\n    flex-shrink: 0;\n    position: relative;\n    gap: 16px;\n    padding: 30px;\n    border-radius: 12px;\n    background: #0f0f0f;\n    border: 1px solid #262626;\n`;\n_c7 = ContentBlock;\nconst ContentText = styled.p`\n    align-self: stretch;\n    flex-grow: 0;\n    flex-shrink: 0;\n    font-size: 16px;\n    text-align: left;\n    color: #999;\n`;\n_c8 = ContentText;\nconst BoldText = styled(ContentText)`\n    width: 710px;\n    font-size: 20px;\n    font-weight: 600;\n    color: #fff;\n`;\n_c9 = BoldText;\nconst Poster = styled.img`\n    width: 100px;\n    height: 150px;\n    border-radius: 8px;\n    object-fit: cover;\n    margin-right: 20px;\n`;\n_c10 = Poster;\nexport default function UpcomigReleases() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    fetchUpcomingMovies().then(setMovies);\n  }, []);\n  const handleNext = () => {\n    if (index < movies.length - 1) {\n      setIndex(index + 1);\n    }\n  };\n  const handlePrev = () => {\n    if (index > 0) {\n      setIndex(index - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uAE30\\uB300\\uB418\\uB294 \\uAC1C\\uBD09\\uC791\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconContainer, {\n        children: [/*#__PURE__*/_jsxDEV(RoundButton, {\n          onClick: handlePrev,\n          children: /*#__PURE__*/_jsxDEV(SvgIcon, {\n            viewBox: \"0 0 20 20\",\n            fill: \"none\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M16.25 10L3.75 10M3.75 10L9.375 15.625M3.75 10L9.375 4.375\",\n              stroke: \"#999999\",\n              strokeWidth: \"1.5\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RoundButton, {\n          onClick: handleNext,\n          children: /*#__PURE__*/_jsxDEV(SvgIcon, {\n            viewBox: \"0 0 20 20\",\n            fill: \"none\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M11.25 3.75L17.5 10M17.5 10L11.25 16.25M17.5 10H2.5\",\n              stroke: \"#999999\",\n              strokeWidth: \"1.5\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(ContentBlock, {\n      children: [/*#__PURE__*/_jsxDEV(Poster, {\n        src: `https://image.tmdb.org/t/p/w200${movies[index].poster_path}`,\n        alt: movies[index].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(BoldText, {\n          children: movies[index].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ContentText, {\n          children: [\"\\uAC1C\\uBD09\\uC77C: \", movies[index].release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ContentText, {\n          children: movies[index].overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this)]\n    }, movies[index].id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(ContentText, {\n      children: \"\\uC601\\uD654 \\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n_s(UpcomigReleases, \"JXnHftRcheCsSoC2+gDDVZAQvHk=\");\n_c11 = UpcomigReleases;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"IconContainer\");\n$RefreshReg$(_c5, \"RoundButton\");\n$RefreshReg$(_c6, \"SvgIcon\");\n$RefreshReg$(_c7, \"ContentBlock\");\n$RefreshReg$(_c8, \"ContentText\");\n$RefreshReg$(_c9, \"BoldText\");\n$RefreshReg$(_c10, \"Poster\");\n$RefreshReg$(_c11, \"UpcomigReleases\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","fetchUpcomingMovies","apiKey","url","response","fetch","data","json","results","Container","div","_c","Header","_c2","Title","p","_c3","IconContainer","_c4","RoundButton","_c5","SvgIcon","svg","_c6","ContentBlock","_c7","ContentText","_c8","BoldText","_c9","Poster","img","_c10","UpcomigReleases","_s","movies","setMovies","index","setIndex","then","handleNext","length","handlePrev","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","src","poster_path","alt","title","release_date","overview","id","_c11","$RefreshReg$"],"sources":["/home/damoa_react/src/pages/MainPage/LeftNoticeJsx/UpcomigReleases.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst fetchUpcomingMovies = async () => {\n    const apiKey = '0645d9c6c82d9a5b799a9a0a0ff91f6c';\n    const url = `https://api.themoviedb.org/3/movie/upcoming?api_key=${apiKey}&language=en-US&page=1`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n};\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    align-self: stretch;\n    flex-grow: 0;\n    flex-shrink: 0;\n    gap: 25px;\n    padding: 40px;\n    border-radius: 10px;\n    background: #1a1a1a;\n    border: 1px solid #262626;\n    margin-right: 30px;\n    margin-left: 30px;\n`;\n\nconst Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    align-self: stretch;\n    flex-grow: 0;\n    flex-shrink: 0;\n    position: relative;\n    gap: 30px;\n`;\n\nconst Title = styled.p`\n    flex-grow: 1;\n    font-size: 24px;\n    font-weight: 600;\n    text-align: left;\n    color: #999;\n`;\n\nconst IconContainer = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n`;\n\nconst RoundButton = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    background: #141414;\n    border: 1px solid #262626;\n    cursor: pointer;\n    &:hover {\n        background-color: #262626;\n    }\n    &:active {\n        background-color: #262626;\n        border: 1px solid red;\n        transition: all 0.3s ease;\n    }\n`;\n\nconst SvgIcon = styled.svg`\n    width: 20px;\n    height: 20px;\n`;\n\nconst ContentBlock = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n    align-self: stretch;\n    flex-grow: 0;\n    flex-shrink: 0;\n    position: relative;\n    gap: 16px;\n    padding: 30px;\n    border-radius: 12px;\n    background: #0f0f0f;\n    border: 1px solid #262626;\n`;\n\nconst ContentText = styled.p`\n    align-self: stretch;\n    flex-grow: 0;\n    flex-shrink: 0;\n    font-size: 16px;\n    text-align: left;\n    color: #999;\n`;\n\nconst BoldText = styled(ContentText)`\n    width: 710px;\n    font-size: 20px;\n    font-weight: 600;\n    color: #fff;\n`;\n\nconst Poster = styled.img`\n    width: 100px;\n    height: 150px;\n    border-radius: 8px;\n    object-fit: cover;\n    margin-right: 20px;\n`;\n\nexport default function UpcomigReleases() {\n    const [movies, setMovies] = useState([]);\n    const [index, setIndex] = useState(0);\n\n    useEffect(() => {\n        fetchUpcomingMovies().then(setMovies);\n    }, []);\n\n    const handleNext = () => {\n        if (index < movies.length - 1) {\n            setIndex(index + 1);\n        }\n    };\n\n    const handlePrev = () => {\n        if (index > 0) {\n            setIndex(index - 1);\n        }\n    };\n\n    return (\n        <Container>\n            <Header>\n                <Title>기대되는 개봉작</Title>\n                <IconContainer>\n                    <RoundButton onClick={handlePrev}>\n                        <SvgIcon viewBox=\"0 0 20 20\" fill=\"none\">\n                            <path\n                                d=\"M16.25 10L3.75 10M3.75 10L9.375 15.625M3.75 10L9.375 4.375\"\n                                stroke=\"#999999\"\n                                strokeWidth=\"1.5\"\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                            />\n                        </SvgIcon>\n                    </RoundButton>\n                    <RoundButton onClick={handleNext}>\n                        <SvgIcon viewBox=\"0 0 20 20\" fill=\"none\">\n                            <path\n                                d=\"M11.25 3.75L17.5 10M17.5 10L11.25 16.25M17.5 10H2.5\"\n                                stroke=\"#999999\"\n                                strokeWidth=\"1.5\"\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                            />\n                        </SvgIcon>\n                    </RoundButton>\n                </IconContainer>\n            </Header>\n            {movies.length > 0 ? (\n                <ContentBlock key={movies[index].id}>\n                    <Poster\n                        src={`https://image.tmdb.org/t/p/w200${movies[index].poster_path}`}\n                        alt={movies[index].title}\n                    />\n                    <div>\n                        <BoldText>{movies[index].title}</BoldText>\n                        <ContentText>개봉일: {movies[index].release_date}</ContentText>\n                        <ContentText>{movies[index].overview}</ContentText>\n                    </div>\n                </ContentBlock>\n            ) : (\n                <ContentText>영화 데이터를 불러오는 중...</ContentText>\n            )}\n        </Container>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}