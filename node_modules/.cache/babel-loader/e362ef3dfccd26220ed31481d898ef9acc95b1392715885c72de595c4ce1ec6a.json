{"ast":null,"code":"import{useState,useEffect}from'react';import axios from'axios';import style from'../css/LoginForm.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function MyPageForm(){const[user_id,setUserId]=useState('');const[user_pw,setUserPw]=useState('');const[phone_number,setPhoneNumber]=useState('');const[new_pw,setNewPw]=useState('');const[confirm_new_pw,setConfirmNewPw]=useState('');const[errorMessage,setErrorMessage]=useState('');const[successMessage,setSuccessMessage]=useState('');const[isVerified,setIsVerified]=useState(false);// 새로운 상태 변수 추가\nuseEffect(()=>{const userId=localStorage.getItem('user_id');if(userId){setUserId(userId);}},[]);const handleVerification=async()=>{try{// Define the base URL\nlet baseURL='';if(process.env.NODE_ENV==='development'){baseURL='http://121.139.20.242:5100';}const response=await axios.post(\"\".concat(baseURL,\"/api/verify\"),{user_id:user_id,user_pw:user_pw,phone_number:phone_number});if(response.data.valid){setIsVerified(true);// 검증 성공 시 상태 업데이트\n}else{setErrorMessage('아이디 또는 비밀번호 또는 전화번호가 잘못되었습니다.');}}catch(error){setErrorMessage('데이터베이스 연결이 실패하였습니다.');}};const handleUpdate=async()=>{if(new_pw!==confirm_new_pw){setErrorMessage('새 비밀번호가 일치하지 않습니다.');return;}try{let baseURL='';if(process.env.NODE_ENV==='development'){baseURL='http://121.139.20.242:5100';}const response=await axios.post(\"\".concat(baseURL,\"/api/update\"),{user_id:localStorage.getItem('user_id'),new_password:new_pw});if(response.data.success){setSuccessMessage('회원 정보가 성공적으로 업데이트되었습니다.');window.location.reload();}else{setErrorMessage('업데이트 중 오류가 발생하였습니다.');}}catch(error){setErrorMessage('데이터베이스 연결이 실패하였습니다.');}};return/*#__PURE__*/_jsx(\"div\",{className:style.bg,children:/*#__PURE__*/_jsxs(\"div\",{className:style.bg__container,children:[/*#__PURE__*/_jsx(\"p\",{className:style.login__title,children:\"\\uD68C\\uC6D0 \\uC815\\uBCF4 \\uC218\\uC815\"}),!isVerified?/*#__PURE__*/_jsxs(\"div\",{className:style.login__input,children:[/*#__PURE__*/_jsxs(\"div\",{className:style.login__input__id,children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"id\",value:user_id,readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:style.login__input__pw,children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD604\\uC7AC \\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"current_password\",value:user_pw,onChange:e=>setUserPw(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:style.login__input__phoneNumber,children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uC804\\uD654\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"phone_number\",value:phone_number,onChange:e=>setPhoneNumber(e.target.value)})]}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:style.errorMessage,children:errorMessage}),/*#__PURE__*/_jsx(\"button\",{className:style.login__loginBtn,onClick:handleVerification,children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uAC80\\uC99D\"})})]}):/*#__PURE__*/_jsxs(\"div\",{className:style.login__input,children:[/*#__PURE__*/_jsxs(\"div\",{className:style.login__input__pw,children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"new_password\",value:new_pw,onChange:e=>setNewPw(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:style.login__input__pw,children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirm_new_password\",value:confirm_new_pw,onChange:e=>setConfirmNewPw(e.target.value)})]}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:style.errorMessage,children:errorMessage}),successMessage&&/*#__PURE__*/_jsx(\"p\",{className:style.successMessage,children:successMessage}),/*#__PURE__*/_jsx(\"button\",{className:style.login__loginBtn,onClick:handleUpdate,children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uC5C5\\uB370\\uC774\\uD2B8\"})})]})]})});}","map":{"version":3,"names":["useState","useEffect","axios","style","jsx","_jsx","jsxs","_jsxs","MyPageForm","user_id","setUserId","user_pw","setUserPw","phone_number","setPhoneNumber","new_pw","setNewPw","confirm_new_pw","setConfirmNewPw","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isVerified","setIsVerified","userId","localStorage","getItem","handleVerification","baseURL","process","env","NODE_ENV","response","post","concat","data","valid","error","handleUpdate","new_password","success","window","location","reload","className","bg","children","bg__container","login__title","login__input","login__input__id","type","name","value","readOnly","login__input__pw","onChange","e","target","login__input__phoneNumber","login__loginBtn","onClick"],"sources":["/Users/programsky/Documents/GitHub/Damoa_sky/src/component/ChangingInformation.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport style from '../css/LoginForm.module.css';\n\nexport default function MyPageForm() {\n    const [user_id, setUserId] = useState('');\n    const [user_pw, setUserPw] = useState('');\n    const [phone_number, setPhoneNumber] = useState('');\n    const [new_pw, setNewPw] = useState('');\n    const [confirm_new_pw, setConfirmNewPw] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n    const [isVerified, setIsVerified] = useState(false); // 새로운 상태 변수 추가\n\n    useEffect(() => {\n        const userId = localStorage.getItem('user_id');\n        if (userId) {\n            setUserId(userId);\n        }\n    }, []);\n\n    const handleVerification = async () => {\n        \n        try {\n            // Define the base URL\n            let baseURL = '';\n            if (process.env.NODE_ENV === 'development') {\n                baseURL = 'http://121.139.20.242:5100';\n            }\n            const response = await axios.post(`${baseURL}/api/verify`, {\n                user_id: user_id,\n                user_pw: user_pw,\n                phone_number: phone_number,\n            });\n            if (response.data.valid) {\n                setIsVerified(true); // 검증 성공 시 상태 업데이트\n            } else {\n                setErrorMessage('아이디 또는 비밀번호 또는 전화번호가 잘못되었습니다.');\n            }\n        } catch (error) {\n            setErrorMessage('데이터베이스 연결이 실패하였습니다.');\n        }\n    };\n\n    const handleUpdate = async () => {\n        if (new_pw !== confirm_new_pw) {\n            setErrorMessage('새 비밀번호가 일치하지 않습니다.');\n            return;\n        }\n\n        try {\n            let baseURL = '';\n            if (process.env.NODE_ENV === 'development') {\n                baseURL = 'http://121.139.20.242:5100';\n            }\n            const response = await axios.post(`${baseURL}/api/update`, {\n                user_id: localStorage.getItem('user_id'),\n                new_password: new_pw,\n            });\n            if (response.data.success) {\n                setSuccessMessage('회원 정보가 성공적으로 업데이트되었습니다.');\n                window.location.reload();\n            } else {\n                setErrorMessage('업데이트 중 오류가 발생하였습니다.');\n            }\n        } catch (error) {\n            setErrorMessage('데이터베이스 연결이 실패하였습니다.');\n        }\n    };\n\n    return (\n        <div className={style.bg}>\n            <div className={style.bg__container}>\n                <p className={style.login__title}>회원 정보 수정</p>\n                {!isVerified ? (\n                    <div className={style.login__input}>\n                        <div className={style.login__input__id}>\n                            <p>아이디</p>\n                            <input type=\"text\" name=\"id\" value={user_id} readOnly />\n                        </div>\n                        <div className={style.login__input__pw}>\n                            <p>현재 비밀번호</p>\n                            <input\n                                type=\"password\"\n                                name=\"current_password\"\n                                value={user_pw}\n                                onChange={(e) => setUserPw(e.target.value)}\n                            />\n                        </div>\n                        <div className={style.login__input__phoneNumber}>\n                            <p>전화번호</p>\n                            <input\n                                type=\"text\"\n                                name=\"phone_number\"\n                                value={phone_number}\n                                onChange={(e) => setPhoneNumber(e.target.value)}\n                            />\n                        </div>\n                        {errorMessage && <p className={style.errorMessage}>{errorMessage}</p>}\n                        <button className={style.login__loginBtn} onClick={handleVerification}>\n                            <p>검증</p>\n                        </button>\n                    </div>\n                ) : (\n                    <div className={style.login__input}>\n                        <div className={style.login__input__pw}>\n                            <p>새 비밀번호</p>\n                            <input\n                                type=\"password\"\n                                name=\"new_password\"\n                                value={new_pw}\n                                onChange={(e) => setNewPw(e.target.value)}\n                            />\n                        </div>\n                        <div className={style.login__input__pw}>\n                            <p>새 비밀번호 확인</p>\n                            <input\n                                type=\"password\"\n                                name=\"confirm_new_password\"\n                                value={confirm_new_pw}\n                                onChange={(e) => setConfirmNewPw(e.target.value)}\n                            />\n                        </div>\n                        {errorMessage && <p className={style.errorMessage}>{errorMessage}</p>}\n                        {successMessage && <p className={style.successMessage}>{successMessage}</p>}\n                        <button className={style.login__loginBtn} onClick={handleUpdate}>\n                            <p>업데이트</p>\n                        </button>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}