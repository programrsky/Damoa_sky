{"ast":null,"code":"var _jsxFileName = \"/Users/programsky/Documents/GitHub/Damoa_sky/src/component/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create a context for authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the AuthContext\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// AuthProvider component to provide auth state to the app\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    // Check if user_id is present in local storage\n    const userId = localStorage.getItem('user_id');\n    setIsLoggedIn(!!userId);\n  }, []);\n  const login = userId => {\n    localStorage.setItem('user_id', userId);\n    setIsLoggedIn(true);\n  };\n  const logout = () => {\n    localStorage.removeItem('user_id');\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isLoggedIn","setIsLoggedIn","userId","localStorage","getItem","login","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/programsky/Documents/GitHub/Damoa_sky/src/component/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create a context for authentication\nconst AuthContext = createContext();\n\n// Custom hook to use the AuthContext\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n\n// AuthProvider component to provide auth state to the app\nexport const AuthProvider = ({ children }) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        // Check if user_id is present in local storage\n        const userId = localStorage.getItem('user_id');\n        setIsLoggedIn(!!userId);\n    }, []);\n\n    const login = (userId) => {\n        localStorage.setItem('user_id', userId);\n        setIsLoggedIn(true);\n    };\n\n    const logout = () => {\n        localStorage.removeItem('user_id');\n        setIsLoggedIn(false);\n    };\n\n    return (\n        <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,OAAOP,UAAU,CAACK,WAAW,CAAC;AAClC,CAAC;;AAED;AAAAE,EAAA,CAJaD,OAAO;AAKpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMW,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAC9CH,aAAa,CAAC,CAAC,CAACC,MAAM,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAIH,MAAM,IAAK;IACtBC,YAAY,CAACG,OAAO,CAAC,SAAS,EAAEJ,MAAM,CAAC;IACvCD,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACjBJ,YAAY,CAACK,UAAU,CAAC,SAAS,CAAC;IAClCP,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACIR,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEV,UAAU;MAAEK,KAAK;MAAEE;IAAO,CAAE;IAAAT,QAAA,EACtDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACf,GAAA,CAxBWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}