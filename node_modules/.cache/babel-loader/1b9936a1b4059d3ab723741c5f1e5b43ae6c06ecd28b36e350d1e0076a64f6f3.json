{"ast":null,"code":"import{useState,useEffect}from'react';import hotContentstyle from'../css/HotContent.module.css';import HotContentUpArrow from'../svg/HotContentUpArrow';import HotContentDownArrow from'../svg/HotContentDownArrow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const fetchMoviesByGenre=async genre=>{const apiKey='0645d9c6c82d9a5b799a9a0a0ff91f6c';const url=\"https://api.themoviedb.org/3/discover/movie?api_key=\".concat(apiKey,\"&language=en-US&with_genres=\").concat(genre,\"&sort_by=popularity.desc&page=1\");const response=await fetch(url);const data=await response.json();return data.results;};export default function Genre(_ref){let{selectedGenre}=_ref;const[movies,setMovies]=useState([]);useEffect(()=>{if(selectedGenre){fetchMoviesByGenre(selectedGenre).then(setMovies);}},[selectedGenre]);if(!selectedGenre)return null;return/*#__PURE__*/_jsx(\"div\",{className:hotContentstyle.hotContent__group,children:movies.length>0?movies.slice(0,5).map((movie,index)=>/*#__PURE__*/_jsxs(\"button\",{className:hotContentstyle.hotContent__group__element,children:[/*#__PURE__*/_jsx(\"p\",{children:index+1}),/*#__PURE__*/_jsx(\"img\",{src:\"https://image.tmdb.org/t/p/w92\".concat(movie.poster_path),alt:movie.title}),/*#__PURE__*/_jsx(\"div\",{className:hotContentstyle.hotContent__content__text__group,children:/*#__PURE__*/_jsx(\"p\",{children:movie.title})}),index%2===0?/*#__PURE__*/_jsx(HotContentUpArrow,{}):/*#__PURE__*/_jsx(HotContentDownArrow,{})]},movie.id)):/*#__PURE__*/_jsx(\"p\",{children:\"\\uC601\\uD654 \\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"})});}","map":{"version":3,"names":["useState","useEffect","hotContentstyle","HotContentUpArrow","HotContentDownArrow","jsx","_jsx","jsxs","_jsxs","fetchMoviesByGenre","genre","apiKey","url","concat","response","fetch","data","json","results","Genre","_ref","selectedGenre","movies","setMovies","then","className","hotContent__group","children","length","slice","map","movie","index","hotContent__group__element","src","poster_path","alt","title","hotContent__content__text__group","id"],"sources":["/Users/programsky/Documents/GitHub/Damoa_sky/src/component/Genre.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport hotContentstyle from '../css/HotContent.module.css';\nimport HotContentUpArrow from '../svg/HotContentUpArrow';\nimport HotContentDownArrow from '../svg/HotContentDownArrow';\n\nconst fetchMoviesByGenre = async (genre) => {\n    const apiKey = '0645d9c6c82d9a5b799a9a0a0ff91f6c';\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=en-US&with_genres=${genre}&sort_by=popularity.desc&page=1`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n};\n\nexport default function Genre({ selectedGenre }) {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        if (selectedGenre) {\n            fetchMoviesByGenre(selectedGenre).then(setMovies);\n        }\n    }, [selectedGenre]);\n\n    if (!selectedGenre) return null;\n\n    return (\n        <div className={hotContentstyle.hotContent__group}>\n            {movies.length > 0 ? (\n                movies.slice(0, 5).map((movie, index) => (\n                    <button key={movie.id} className={hotContentstyle.hotContent__group__element}>\n                        <p>{index + 1}</p>\n                        <img src={`https://image.tmdb.org/t/p/w92${movie.poster_path}`} alt={movie.title} />\n                        <div className={hotContentstyle.hotContent__content__text__group}>\n                            <p>{movie.title}</p>\n                        </div>\n                        {index % 2 === 0 ? <HotContentUpArrow /> : <HotContentDownArrow />}\n                    </button>\n                ))\n            ) : (\n                <p>영화 데이터를 불러오는 중...</p>\n            )}\n        </div>\n    );\n}\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,iBAAiB,KAAM,0BAA0B,CACxD,MAAO,CAAAC,mBAAmB,KAAM,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7D,KAAM,CAAAC,kBAAkB,CAAG,KAAO,CAAAC,KAAK,EAAK,CACxC,KAAM,CAAAC,MAAM,CAAG,kCAAkC,CACjD,KAAM,CAAAC,GAAG,wDAAAC,MAAA,CAA0DF,MAAM,iCAAAE,MAAA,CAA+BH,KAAK,mCAAiC,CAC9I,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACH,GAAG,CAAC,CACjC,KAAM,CAAAI,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CAACE,OAAO,CACvB,CAAC,CAED,cAAe,SAAS,CAAAC,KAAKA,CAAAC,IAAA,CAAoB,IAAnB,CAAEC,aAAc,CAAC,CAAAD,IAAA,CAC3C,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CAExCC,SAAS,CAAC,IAAM,CACZ,GAAIoB,aAAa,CAAE,CACfZ,kBAAkB,CAACY,aAAa,CAAC,CAACG,IAAI,CAACD,SAAS,CAAC,CACrD,CACJ,CAAC,CAAE,CAACF,aAAa,CAAC,CAAC,CAEnB,GAAI,CAACA,aAAa,CAAE,MAAO,KAAI,CAE/B,mBACIf,IAAA,QAAKmB,SAAS,CAAEvB,eAAe,CAACwB,iBAAkB,CAAAC,QAAA,CAC7CL,MAAM,CAACM,MAAM,CAAG,CAAC,CACdN,MAAM,CAACO,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,gBAChCxB,KAAA,WAAuBiB,SAAS,CAAEvB,eAAe,CAAC+B,0BAA2B,CAAAN,QAAA,eACzErB,IAAA,MAAAqB,QAAA,CAAIK,KAAK,CAAG,CAAC,CAAI,CAAC,cAClB1B,IAAA,QAAK4B,GAAG,kCAAArB,MAAA,CAAmCkB,KAAK,CAACI,WAAW,CAAG,CAACC,GAAG,CAAEL,KAAK,CAACM,KAAM,CAAE,CAAC,cACpF/B,IAAA,QAAKmB,SAAS,CAAEvB,eAAe,CAACoC,gCAAiC,CAAAX,QAAA,cAC7DrB,IAAA,MAAAqB,QAAA,CAAII,KAAK,CAACM,KAAK,CAAI,CAAC,CACnB,CAAC,CACLL,KAAK,CAAG,CAAC,GAAK,CAAC,cAAG1B,IAAA,CAACH,iBAAiB,GAAE,CAAC,cAAGG,IAAA,CAACF,mBAAmB,GAAE,CAAC,GANzD2B,KAAK,CAACQ,EAOX,CACX,CAAC,cAEFjC,IAAA,MAAAqB,QAAA,CAAG,0EAAiB,CAAG,CAC1B,CACA,CAAC,CAEd"},"metadata":{},"sourceType":"module","externalDependencies":[]}